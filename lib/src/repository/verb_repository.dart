import 'package:flutter/cupertino.dart';

import '../model/sentence/verb/any_verb.dart';
import '../model/sentence/verb/be.dart';
import '../model/sentence/verb/modal_verb.dart';
import '../model/sentence/verb/verb.dart';

class VerbRepository extends ChangeNotifier {
  List<ModalVerb> modalVerbs() => const [
        ModalVerb(
            verb: 'can',
            verbContraction: "can",
            negative: 'cannot',
            negativeContraction: "can't",
            affirmativeIEs: 'puedo',
            affirmativeSingularYouEs: 'puedes',
            affirmativeHeEs: 'puede',
            affirmativeWeEs: 'podemos',
            affirmativeTheyEs: 'pueden'),
        ModalVerb(
            verb: 'could',
            verbContraction: "could",
            negative: 'could not',
            negativeContraction: "couldn't",
            affirmativeIEs: 'podría',
            affirmativeSingularYouEs: 'podrías',
            affirmativeHeEs: 'podría',
            affirmativeWeEs: 'podríamos',
            affirmativeTheyEs: 'podrían'),
        ModalVerb(
            verb: 'may',
            verbContraction: "may",
            negative: 'may not',
            negativeContraction: "mayn't",
            affirmativeIEs: 'podría',
            affirmativeSingularYouEs: 'podrías',
            affirmativeHeEs: 'podría',
            affirmativeWeEs: 'podríamos',
            affirmativeTheyEs: 'podrían'),
        ModalVerb(
            verb: 'might',
            verbContraction: "might",
            negative: 'might not',
            negativeContraction: "mightn't",
            affirmativeIEs: 'podría',
            affirmativeSingularYouEs: 'podrías',
            affirmativeHeEs: 'podría',
            affirmativeWeEs: 'podríamos',
            affirmativeTheyEs: 'podrían'),
        ModalVerb(
            verb: 'must',
            verbContraction: "must",
            negative: 'must not',
            negativeContraction: "mustn't",
            affirmativeIEs: 'debo',
            affirmativeSingularYouEs: 'debes',
            affirmativeHeEs: 'debe',
            affirmativeWeEs: 'debemos',
            affirmativeTheyEs: 'deben'),
        ModalVerb(
            verb: 'should',
            verbContraction: "should",
            negative: 'should not',
            negativeContraction: "shouldn't",
            affirmativeIEs: 'debería',
            affirmativeSingularYouEs: 'deberías',
            affirmativeHeEs: 'debería',
            affirmativeWeEs: 'deberíamos',
            affirmativeTheyEs: 'deberían'),
        ModalVerb(
            verb: 'would',
            verbContraction: "'d",
            negative: 'would not',
            negativeContraction: "wouldn't",
            affirmativeIEs: '',
            affirmativeSingularYouEs: '',
            affirmativeHeEs: '',
            affirmativeWeEs: '',
            affirmativeTheyEs: ''),
      ];

  List<AnyVerb> findAll() {
    return intransitiveVerbs();
  }

  List<AnyVerb> intransitiveVerbs() => [
        const Be(
            infinitiveEs: 'ser',
            pastParticipleEs: 'sido',
            progressiveEs: 'siendo',
            presentIEs: 'soy',
            presentSingularYouEs: 'eres',
            presentHeEs: 'es',
            presentWeEs: 'somos',
            presentTheyEs: 'son',
            pastIEs: 'fuí',
            pastSingularYouEs: 'fuiste',
            pastHeEs: 'fué',
            pastWeEs: 'fuimos',
            pastTheyEs: 'fueron',
            futureIEs: 'seré',
            futureSingularYouEs: 'serás',
            futureHeEs: 'será',
            futureWeEs: 'seremos',
            futureTheyEs: 'serán',
            conditionalIEs: 'sería',
            conditionalSingularYouEs: 'serías',
            conditionalHeEs: 'sería',
            conditionalWeEs: 'seríamos',
            conditionalTheyEs: 'serían'),
        const Verb(
            infinitive: 'build',
            past: 'built',
            pastParticiple: 'built',
            infinitiveEs: 'construir',
            pastParticipleEs: 'construido',
            progressiveEs: 'construyendo',
            presentIEs: 'construyo',
            presentSingularYouEs: 'construyes',
            presentHeEs: 'construye',
            presentWeEs: 'construimos',
            presentTheyEs: 'construyen',
            pastIEs: 'construí',
            pastSingularYouEs: 'construiste',
            pastHeEs: 'construyó',
            pastWeEs: 'construimos',
            pastTheyEs: 'construyeron',
            futureIEs: 'construiré',
            futureSingularYouEs: 'construirás',
            futureHeEs: 'construirá',
            futureWeEs: 'construiremos',
            futureTheyEs: 'construirán',
            conditionalIEs: 'construiría',
            conditionalSingularYouEs: 'construirías',
            conditionalHeEs: 'construiría',
            conditionalWeEs: 'construiríamos',
            conditionalTheyEs: 'construirían',
            isTransitive: true,
            isDitransitive: false),
      ];
}
